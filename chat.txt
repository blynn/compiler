= ChatFP =

[pass]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
<style>
.input{
font-family:monospace;
white-space: pre-wrap;
padding:1ex;
background-color:white;}
.convo{
overflow-wrap: break-word;
}
.output{
padding:1ex;
background-color:lightgrey;
}
.input::before{
display:flex;
content:"\3bb";
margin-left: 1ex;
margin-right: 1ex;
color:purple;
}
.input{
display:flex;
padding:1ex;
background-color:lightgrey;
}
.ok{
padding:1ex;
border: 1px solid black;
}
</style>

<div id="convo" class="convo"></div>

<textarea id="inbox" rows="4" style="width:100%;"></textarea>
<button onclick="interpret();">&#9654;</button>

<div id="errmsg" style="color:red;font-family:monospace;"></div>

<script>
"use strict";
const convo = document.getElementById("convo");
const inbox = document.getElementById("inbox");
const errmsg = document.getElementById("errmsg");

const repl = {};

function run(f, s) {
  repl.buf = [];
  repl.out = [];
  repl.inp = teen(s);
  repl.cursor = 0;
  repl.instance.exports[f]();
  return {
    buf : repl.buf.map(tedea),
    out : tedea(repl.out),
  }
}

function teen(s) { return (new TextEncoder()).encode(s); }
function tede(s) { return (new TextDecoder()).decode(s); }
function tedea(a) { return (new TextDecoder()).decode(Uint8Array.from(a)); }

async function loadRepl() {
  try {
    repl.instance = (await WebAssembly.instantiateStreaming(fetch('doh.wasm'), {env:
      { putchar: c  => repl.out.push(c)
      , eof    : () => repl.cursor == repl.inp.length
      , getchar: () => repl.inp[repl.cursor++]
      , nextout: () => { repl.buf.push(repl.out); repl.out = []; }
      }})).instance;
  } catch(err) {
    console.log(err);
  }
}

function interpret() {
  errmsg.innerText = "";
  const r = run("chat", inbox.value);
  if (r.buf[0] == "error") {
    errmsg.innerText = r.out;
  } else {
    const ie = document.createElement("div");
    if (r.buf[0] == "ok") {
      ie.classList.add('ok');
    } else {
      ie.classList.add('input');
    }
    ie.innerText = inbox.value;
    convo.appendChild(ie);
    if (r.buf[0] == "") {
      const oe = document.createElement("div");
      oe.classList.add('output');
      oe.innerText = r.out;
      convo.appendChild(oe);
      if (r.buf[1] == "svg") {
        const svg = document.createElementNS("http://www.w3.org/2000/svg", "svg");
        const as = r.buf[2].split('\n');
        for (let i = 0; i < as.length - 1; i += 2) {
          svg.setAttribute(as[i], as[i+1]);
        }
        svg.innerHTML = r.out;
        convo.appendChild(svg);
      }
    }
    inbox.value = "";
  }
}
loadRepl();
</script>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
